package analisisjava;

import java_cup.runtime.Symbol;

//PARSER 
parser code
{://Codigo visible
    public String ER="";
    public String EN="";
    public int id = 0;
    public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) +" " + s.value);
        
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }

:}

action code
{://Codigo de usuario
    String tmp="";
    String id1 = "";
    String id2 = "";
    int x1;
    int x2;
    int y1, y2;
    int x = 0;
    int y = 0;
:}


//simbolos
terminal String PAR_A, PAR_C, LLAV_A, LLAV_C, COR_A, COR_C, COMA, PYCOMA, DOSPU, PUNTO, SUMA, RESTA, MODS, MULTI, DIVIS, MAYOR, MENOR, IGUAL;

//logicos
terminal String TRU, FALS, AND, OR, NOT;

//visibilidad
terminal String PRIVAT, PUBLI, PROTEC, FINA;

//Tipo de Datos
terminal String INT, BOOLEA, STRIN, CARAC, DOUBL, OBJEC, VOID;

//sentencias
terminal String IF, ELSE, DO, WHILE, SWITCH, FOR;

//reservadas
terminal String CASE, BREAK, IMPOR, CLASS, RETUR, SCANE, NEXTL, NEXTI;
terminal String SYSTE, OUT, PRINT, INTEG, PARSI, PARSF, FLOAT, EXTEN, STATI, DEFAU, NEW;

//expresiones
terminal String ENTERO, ID, DECIMAL, SPACE, ENTER, CADENA, COMENTARIO;//, CARACT;

nonterminal String INICIO, A1, IMPORTS, A2, A3, ASIGNA, E, A5;

nonterminal A4, PARAMETRO1, PARAMETRO2, PAR1 , PAR2, OTRO, OPERACION;

nonterminal PAR11;

nonterminal String TIPO, COMENTL, COMENTM, COMENTARIOS, VIENE, VALORES;

nonterminal String TIPO2;

nonterminal VISIBILIDAD, EXPRESIONES, DECLARACION, LISTAID, DECLA2, EXPRE2, EXPRE3;

nonterminal RETURNS, SWITCHS, DEF, CASO, BRE;

nonterminal COND, REL, OPREL, OIF, OE, EXIF, EXIFE, EXEL;

nonterminal PRINTF, ASIGNA2, B1, STAT, B2;

//parawhile
nonterminal EXWHI, EXDO;

nonterminal OFOR, EXPRE4 ;

//agregamos la precedencia
precedence left AND, OR;
precedence left COMA, PUNTO;
precedence left SUMA, RESTA;
precedence left MULTI, DIVIS, MODS; 

start with INICIO;

INICIO ::= A1;

A1 ::= IMPOR IMPORTS PYCOMA A1 | COMENTARIOS A1 | A2;

A2 ::= VISIBILIDAD CLASS ID A3 LLAV_A EXPRESIONES LLAV_C;

A3 ::= EXTEN IMPORTS| error | ;

IMPORTS ::= IMPORTS PUNTO ID|
            ID;

EXPRESIONES ::= DECLARACION EXPRESIONES|
                COMENTARIOS EXPRESIONES|
                DECLA2 EXPRESIONES|
                error|
                ;

RETURNS ::= RETUR VALORES PYCOMA|;

DECLA2 ::=  VISIBILIDAD TIPO ID PAR_A PAR2 PAR_C LLAV_A EXPRE2 RETURNS LLAV_C|
            TIPO ID PAR_A PAR2 PAR_C LLAV_A EXPRE2 RETURNS LLAV_C|
            OTRO|
            VISIBILIDAD ID PAR_A PAR2 PAR_C LLAV_A EXPRE2 RETURNS LLAV_C;

EXPRE2 ::=  DECLA2 EXPRE2|
            COMENTARIOS EXPRE2|
            SWITCHS EXPRE2|
            EXIF EXPRE2|
            OFOR EXPRE2 |
            EXDO EXPRE2 |
            EXWHI EXPRE2|
            PRINTF EXPRE2|
            ASIGNA2 EXPRE2| ;
            //error|;


ASIGNA2 ::= ID IGUAL ASIGNA PYCOMA|
            ID IGUAL B1 PYCOMA|
            ID B1 PYCOMA;
            //ASIGNA PYCOMA;

        
B1 ::=  //INTEG PUNTO PARSI|
        //FLOAT PUNTO PARSF|
        IMPORTS PUNTO B2;

B2 ::=  PARSI|
        PARSF|
        EXPRE4 PAR_A ID PAR_C;

EXPRE4 ::= NEXTL | NEXTI;

PRINTF ::= SYSTE PUNTO OUT PUNTO PRINT PAR_A PAR1 PAR_C PYCOMA;

EXIF ::=    IF PAR_A COND PAR_C LLAV_A EXPRE2 RETURNS LLAV_C OIF OE;

OIF ::= OIF ELSE IF PAR_A COND PAR_C LLAV_A EXPRE2 RETURNS LLAV_C | ;

OE ::= ELSE LLAV_A EXPRE2 RETURNS LLAV_C | ;

EXWHI ::=   WHILE PAR_A COND PAR_C LLAV_A EXPRE2 RETURNS BRE LLAV_C;

EXDO ::=    DO LLAV_A EXPRE2 RETURNS BRE LLAV_C WHILE PAR_A COND PAR_C PYCOMA;

OFOR ::=    FOR PAR_A TIPO ID PYCOMA ID OPREL PARAMETRO1 PYCOMA ID EXPRE3 PAR_C LLAV_A EXPRE2 RETURNS BRE LLAV_C|
            FOR PAR_A ID PYCOMA ID OPREL PARAMETRO1 PYCOMA ID EXPRE3 PAR_C LLAV_A EXPRE2 RETURNS BRE LLAV_C;

EXPRE3 ::=  OPERACION OPERACION | OPERACION VALORES;

COND ::=    COND OR COND|
            COND AND COND|
            REL;

REL ::= PARAMETRO1 OPREL PARAMETRO1;

OPREL ::=   MAYOR|
            MENOR|
            IGUAL IGUAL|
            NOT IGUAL|
            MAYOR IGUAL|
            MENOR IGUAL;

SWITCHS ::= SWITCH PAR_A PAR11 PAR_C LLAV_A A5 DEF LLAV_C;

A5 ::=  A5 CASO | CASO ;

BRE ::= BREAK | ;

CASO ::=    CASE VALORES DOSPU EXPRE2 BRE PYCOMA;

DEF ::= DEFAU DOSPU EXPRE2 BRE PYCOMA |;

PAR11 ::= PARAMETRO1 | error;

DECLA2 ::=  TIPO LISTAID A4 PYCOMA;

DECLARACION ::= VISIBILIDAD TIPO LISTAID A4 PYCOMA;

A4 ::=  IGUAL ASIGNA | error | ;

COMENTARIOS ::= COMENTARIO;

COMENTL ::= DIVIS DIVIS VIENE;

COMENTM ::= DIVIS MULTI VIENE MULTI DIVIS;

VIENE ::= VIENE VALORES| VALORES;

LISTAID ::= LISTAID COMA ID | ID;

VISIBILIDAD ::= PRIVAT|
                PUBLI|
                PROTEC|
                FINA
                ;

TIPO ::=    INT|
            BOOLEA|
            STRIN|
            CARAC|
            DOUBL|
            OBJEC|
            VOID
            ;

OTRO ::=    IMPORTS PAR_A PARAMETRO1 PAR_C EXEL|
            IMPORTS PAR_A PAR2 PAR_C EXEL;

EXEL ::=    LLAV_A EXPRE2 RETURNS LLAV_C|PYCOMA;

//asignacion de parametros
ASIGNA ::=  OTRO | NEW OTRO |VALORES;

OPERACION ::=   SUMA |
                RESTA|
                DIVIS|
                MULTI|
                MODS;

PARAMETRO1 ::=  RESTA PARAMETRO1|
                PAR_A PARAMETRO1 PAR_C|
                ID PAR_A PARAMETRO1 PAR_C|
                ID COR_A PAR1 COR_C |
                PARAMETRO1 OPERACION PARAMETRO1|
                PARAMETRO1 COMA PARAMETRO1|
                VALORES;


PAR1 ::= PARAMETRO1 | error | ;

PAR2 ::= PARAMETRO2 | ;

PARAMETRO2 ::= TIPO ID COMA PARAMETRO2| TIPO ID;

VALORES ::= ENTERO | DECIMAL | ID | CADENA| TRU | FALS;