
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20150930 (SVN rev 66)
//----------------------------------------------------

package analisishtml;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20150930 (SVN rev 66) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parserh extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parserh() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parserh(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parserh(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\030\000\002\002\004\000\002\002\010\000\002\006" +
    "\007\000\002\006\002\000\002\007\006\000\002\010\007" +
    "\000\002\010\002\000\002\005\006\000\002\005\006\000" +
    "\002\005\006\000\002\005\006\000\002\005\002\000\002" +
    "\004\003\000\002\004\003\000\002\004\003\000\002\004" +
    "\003\000\002\004\003\000\002\004\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\003\003\000" +
    "\002\003\003\000\002\003\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\055\000\004\041\004\001\002\000\014\023\ufff6\125" +
    "\007\126\011\127\012\130\010\001\002\000\004\002\006" +
    "\001\002\000\004\002\001\001\002\000\004\025\055\001" +
    "\002\000\004\025\052\001\002\000\004\025\047\001\002" +
    "\000\004\025\044\001\002\000\004\023\014\001\002\000" +
    "\006\043\016\045\ufffe\001\002\000\004\045\036\001\002" +
    "\000\014\023\ufff6\125\007\126\011\127\012\130\010\001" +
    "\002\000\004\023\020\001\002\000\006\044\ufffb\063\022" +
    "\001\002\000\004\044\035\001\002\000\014\023\ufff6\125" +
    "\007\126\011\127\012\130\010\001\002\000\004\023\024" +
    "\001\002\000\016\003\027\115\032\116\025\117\031\122" +
    "\033\124\030\001\002\000\016\023\ufff3\064\ufff3\125\ufff3" +
    "\126\ufff3\127\ufff3\130\ufff3\001\002\000\004\064\034\001" +
    "\002\000\016\023\ufff0\064\ufff0\125\ufff0\126\ufff0\127\ufff0" +
    "\130\ufff0\001\002\000\016\023\ufff1\064\ufff1\125\ufff1\126" +
    "\ufff1\127\ufff1\130\ufff1\001\002\000\016\023\ufff4\064\ufff4" +
    "\125\ufff4\126\ufff4\127\ufff4\130\ufff4\001\002\000\016\023" +
    "\ufff5\064\ufff5\125\ufff5\126\ufff5\127\ufff5\130\ufff5\001\002" +
    "\000\016\023\ufff2\064\ufff2\125\ufff2\126\ufff2\127\ufff2\130" +
    "\ufff2\001\002\000\004\044\ufffc\001\002\000\004\045\uffff" +
    "\001\002\000\014\023\ufff6\125\007\126\011\127\012\130" +
    "\010\001\002\000\004\042\040\001\002\000\004\002\000" +
    "\001\002\000\004\023\042\001\002\000\004\046\043\001" +
    "\002\000\004\042\ufffd\001\002\000\016\003\027\115\032" +
    "\116\025\117\031\122\033\124\030\001\002\000\014\023" +
    "\ufff6\125\007\126\011\127\012\130\010\001\002\000\004" +
    "\023\ufff8\001\002\000\016\003\027\115\032\116\025\117" +
    "\031\122\033\124\030\001\002\000\014\023\ufff6\125\007" +
    "\126\011\127\012\130\010\001\002\000\004\023\ufff9\001" +
    "\002\000\016\003\027\115\032\116\025\117\031\122\033" +
    "\124\030\001\002\000\014\023\ufff6\125\007\126\011\127" +
    "\012\130\010\001\002\000\004\023\ufff7\001\002\000\016" +
    "\003\027\115\032\116\025\117\031\122\033\124\030\001" +
    "\002\000\014\023\ufff6\125\007\126\011\127\012\130\010" +
    "\001\002\000\004\023\ufffa\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\055\000\004\002\004\001\001\000\004\005\012\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\006\014\001\001\000\004\007\036" +
    "\001\001\000\004\005\016\001\001\000\002\001\001\000" +
    "\004\010\020\001\001\000\002\001\001\000\004\005\022" +
    "\001\001\000\002\001\001\000\004\004\025\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\005\040" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\044" +
    "\001\001\000\004\005\045\001\001\000\002\001\001\000" +
    "\004\004\047\001\001\000\004\005\050\001\001\000\002" +
    "\001\001\000\004\004\052\001\001\000\004\005\053\001" +
    "\001\000\002\001\001\000\004\004\055\001\001\000\004" +
    "\005\056\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parserh$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parserh$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parserh$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


//Codigo visible
    public String ER="";
    public String EN="";
    public int id = 0;
    public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) +" " + s.value);
        
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parserh$actions {

//Codigo de usuario
    String tmp="";
    String id1 = "";
    String id2 = "";
    int x1;
    int x2;
    int y1, y2;
    int x = 0;
    int y = 0;

  private final parserh parser;

  /** Constructor */
  CUP$parserh$actions(parserh parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parserh$do_action_part00000000(
    int                        CUP$parserh$act_num,
    java_cup.runtime.lr_parser CUP$parserh$parser,
    java.util.Stack            CUP$parserh$stack,
    int                        CUP$parserh$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parserh$result;

      /* select the action based on the action number */
      switch (CUP$parserh$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-1)).right;
		String start_val = (String)((java_cup.runtime.Symbol) CUP$parserh$stack.elementAt(CUP$parserh$top-1)).value;
		RESULT = start_val;
              CUP$parserh$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-1)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parserh$parser.done_parsing();
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= HTML_I ATRIB MAYOR ENCABE CUERPO HTML_F 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-5)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ENCABE ::= HEAD_I ATRIB MAYOR TITULO HEAD_F 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("ENCABE",4, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-4)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ENCABE ::= 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("ENCABE",4, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // CUERPO ::= BODY_I ATRIB MAYOR BODY_F 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("CUERPO",5, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-3)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // TITULO ::= TITLE_I ATRIB MAYOR VALORES TITLE_F 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("TITULO",6, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-4)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // TITULO ::= 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("TITULO",6, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ATRIB ::= COLOR IGUAL VALORES ATRIB 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("ATRIB",3, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-3)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ATRIB ::= TCOLOR IGUAL VALORES ATRIB 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("ATRIB",3, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-3)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ATRIB ::= ALIGN IGUAL VALORES ATRIB 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("ATRIB",3, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-3)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ATRIB ::= FONT IGUAL VALORES ATRIB 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("ATRIB",3, ((java_cup.runtime.Symbol)CUP$parserh$stack.elementAt(CUP$parserh$top-3)), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ATRIB ::= 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("ATRIB",3, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // VALORES ::= ENTERO 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("VALORES",2, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // VALORES ::= DECIMAL 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("VALORES",2, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // VALORES ::= ID 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("VALORES",2, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // VALORES ::= CADENA 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("VALORES",2, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VALORES ::= CADENA2 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("VALORES",2, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // VALORES ::= error 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("VALORES",2, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // TIPO ::= INT 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("TIPO",1, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // TIPO ::= BOOLEA 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("TIPO",1, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // TIPO ::= STRIN 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("TIPO",1, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // TIPO ::= CARAC 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("TIPO",1, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // TIPO ::= DOUBL 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("TIPO",1, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // TIPO ::= error 
            {
              String RESULT =null;

              CUP$parserh$result = parser.getSymbolFactory().newSymbol("TIPO",1, ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), ((java_cup.runtime.Symbol)CUP$parserh$stack.peek()), RESULT);
            }
          return CUP$parserh$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parserh$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parserh$do_action(
    int                        CUP$parserh$act_num,
    java_cup.runtime.lr_parser CUP$parserh$parser,
    java.util.Stack            CUP$parserh$stack,
    int                        CUP$parserh$top)
    throws java.lang.Exception
    {
              return CUP$parserh$do_action_part00000000(
                               CUP$parserh$act_num,
                               CUP$parserh$parser,
                               CUP$parserh$stack,
                               CUP$parserh$top);
    }
}

}
